pipeline {
  agent any

  environment {
    DOCKER_REGISTRY   = 'docker.io'
    DOCKER_REPO       = 'shaikbasit99/nestapp'
    GIT_REPO          = 'https://github.com/shaikbasid123/nodejs_application.git'
    K8S_MANIFEST_PATH = 'k8s/deployment.yaml'
    IMAGE_PLACEHOLDER = 'v1'
  }

  stages {
    stage('Prepare Git') {
      steps {
        git branch: 'main',
            url: 'git@github.com:org/repo.git',
            credentialsId: 'github-token',
            changelog: false,
            poll: false
      }
    }

    stage('Checkout') {
      steps {
        checkout scm
        script {
          // compute shorter commit hash for tagging
          GIT_COMMIT_SHORT = sh(returnStdout: true, script: "git rev-parse --short HEAD").trim()
          env.IMAGE_TAG = "${GIT_COMMIT_SHORT}"
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          env.FULL_IMAGE = "${DOCKER_REGISTRY}/${DOCKER_REPO}:${IMAGE_TAG}"
          echo "Building image ${FULL_IMAGE}"
          sh "docker build -t ${FULL_IMAGE} ."
        }
      }
    }

    stage('Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            echo "$DOCKER_PASS" | docker login ${DOCKER_REGISTRY} -u "$DOCKER_USER" --password-stdin
            docker push ${FULL_IMAGE}
          '''
        }
      }
    }

    stage('Update K8s Manifest in Git (GitOps flow)') {
      steps {
        withCredentials([string(credentialsId: 'github-token', variable: 'GH_TOKEN')]) {
          sh '''
            git checkout main || git checkout -b main

            sed -i.bak "s|${IMAGE_PLACEHOLDER}|${IMAGE_TAG}|g" ${K8S_MANIFEST_PATH}

            git --no-pager diff -- ${K8S_MANIFEST_PATH} || true

            git add ${K8S_MANIFEST_PATH}
            git commit -m "chore: update k8s image to ${DOCKER_REPO}:${IMAGE_TAG}" || echo "No changes to commit"

            git push https://${GH_TOKEN}@${env.GIT_URL#https://} HEAD:main
          '''
        }
      }
    }
  }
}
