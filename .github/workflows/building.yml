name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write   # needed for committing back to repo

    env:
      IMAGE_NAME: node-app
      REGISTRY: docker.io
      GIT_USER_NAME: shaikbasid123
      GIT_REPO_NAME: nodejs_application

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Build & Push Docker Image
      - name: Build & Push Backend Image
        run: |
          BACKEND_TAG=backend-V${{ github.run_number }}
          docker build -t $REGISTRY/${{ secrets.DOCKER_USERNAME }}/backend:$BACKEND_TAG -f app/Dockerfile ./app
          docker push $REGISTRY/${{ secrets.DOCKER_USERNAME }}/backend:$BACKEND_TAG
          echo "BACKEND_TAG=$BACKEND_TAG" >> $GITHUB_ENV

      - name: Build & Push Frontend Image
        run: |
          FRONTEND_TAG=frontend-V${{ github.run_number }}
          docker build -t $REGISTRY/${{ secrets.DOCKER_USERNAME }}/frontend:$FRONTEND_TAG -f web/Dockerfile ./web
          docker push $REGISTRY/${{ secrets.DOCKER_USERNAME }}/frontend:$FRONTEND_TAG
          echo "FRONTEND_TAG=$FRONTEND_TAG" >> $GITHUB_ENV

      # 4. Update Kubernetes Deployment Manifest
      - name: Update k8s deployment with new image tag
        run: |
          sed -i "s/replaceImageTag/${BACKEND_TAG}/g" k8s/backend.yaml
          sed -i "s/replaceImageTag/${FRONTEND_TAG}/g" k8s/frontend.yaml

      # 5. Commit & Push updated manifest
      - name: Commit and push changes
        run: |
          git config user.email "shaikbasid50@gmail.com"
          git config user.name "${{ env.GIT_USER_NAME }}"
          git add k8s/backend.yaml
          git commit -m "Update deployment image to version $IMAGE_TAG"
          git push https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/${{ env.GIT_USER_NAME }}/${{ env.GIT_REPO_NAME }} HEAD:main
       # 6. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 7. Update kubeconfig to connect to EKS
      - name: Setup kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      # 8. Deploy manifests to Kubernetes
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/backend.yaml
          kubectl apply -f k8s/frontend.yaml
          kubectl apply -f k8s/database.yaml

      # 9. Verify rollout status
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/backend-deployment
          kubectl rollout status deployment/frontend-deployment
